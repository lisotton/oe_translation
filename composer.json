{
    "name": "openeuropa/oe_translation",
    "description": "OpenEuropa Drupal module template.",
    "type": "drupal-module",
    "license": "EUPL-1.2",
    "minimum-stability": "dev",
    "prefer-stable": true,
    "require": {
        "php": ">=8.0",
        "drupal/core": "^9.4",
        "drupal/tmgmt": "^1.14",
        "jakeasmith/http_build_url": "^1.0",
        "php-http/guzzle7-adapter": "^1.0"
    },
    "require-dev": {
        "behat/behat": "^3.10",
        "behat/mink-selenium2-driver": "^1.5",
        "composer/installers": "^1.11",
        "cweagans/composer-patches": "^1.7",
        "drupal/address": "^1.11",
        "drupal/block_field": "^1.0@RC",
        "drupal/config_devel": "^1.2",
        "drupal/core-composer-scaffold": "^9.4",
        "drupal/ctools": "^3.7",
        "drupal/drupal-extension": "dev-master as 4.0",
        "drupal/entity_version": "^1.0-beta8",
        "drupal/metatag": "^1.16",
        "drupal/paragraphs": "^1.13",
        "drupal/token": "^1.10",
        "drupaltest/behat-traits": "^0.3",
        "drush/drush": "^11.1",
        "guzzlehttp/guzzle": "^7.0",
        "masterminds/html5": "^2.7.6",
        "mikey179/vfsstream": "^1.6.10",
        "openeuropa/behat-transformation-context": "dev-master",
        "openeuropa/code-review": "2.x-dev",
        "openeuropa/epoetry-client": "1.x-dev",
        "openeuropa/oe_multilingual": "dev-master",
        "openeuropa/oe_editorial": "dev-master",
        "openeuropa/task-runner-drupal-project-symlink": "1.x-dev",
        "phpspec/prophecy-phpunit": "^2",
        "pimple/pimple": "^3.5",
        "symfony/css-selector": "^4.4.24",
        "symfony/dom-crawler": "^4.4.44",
        "symfony/http-foundation": "^4.4.30",
        "symfony/phpunit-bridge": "^6.0",
        "symfony/routing": "^4.4.30",
        "symfony/validator": "^4.4.30",
        "symfony/yaml": "^4.4.29",
        "symfony/property-access": "~4",
        "symfony/property-info": "~4",
        "php-soap/psr18-transport": "~1.2",
        "symfony/serializer": "~4.4.47",
        "azjezz/psl": "^1.9.3",
        "php-http/discovery": "^1.15.2",
        "php-http/message": "^1.13",
        "symfony/options-resolver": "^5.4"
    },
    "_readme": [
        "Patching core event dispatcher for 9.4.x to prevent indiscriminate calls to stopPropagation. Can be removed when we go to D10. See https://www.drupal.org/project/drupal/issues/3319791.",
        "Requireding symfony propery-access and propery-info for the ePoetry mock for the serializer that uses them.",
        "Requiring minimum versions of php-soap/psr18-transport and symfony/serializer for the epoetry client which needs them for lowest dependencies.",
        "Explicit requirement of token module due to lower versions declaring optional parameters before the require one on token_tokens() function.",
        "Use master branch of drupal/drupal-extension to replace fabpot/goutte with behat/mink-browserkit-driver and the rest of the behat required dependencies.",
        "Explicit minimum version requirement of symfony/phpunit-bridge to replace drupal/core-dev testing classes and traits.",
        "Explicit minimum version requirement of pimple/pimple due to lower versions missing return type on various methods.",
        "Explicit minimum version requirement of symfony packages due to lower versions missing return type on various methods being incompatible with PHP 8.1 parent methods.",
        "Explicit minimum version requirement of guzzlehttp/guzzle due to lower versions missing return type on CookieJar::getIterator() and CookieJar::count() methods.",
        "Explicit minimum version requirement of masterminds/html5 due to lower versions passing NULL parameters instead of string when calling DOMImplementation::createDocument() method.",
        "Explicit minimum version requirement of mikey179/vfsstream due to lower versions missing return type on vfsStreamDirectory::getIterator() method."
    ],
    "conflict": {
        "openeuropa/oe_editorial": "<1.2.0"
    },
    "scripts": {
        "post-install-cmd": "./vendor/bin/run drupal:site-setup",
        "post-update-cmd": "./vendor/bin/run drupal:site-setup"
    },
    "repositories": {
        "drupal": {
            "type": "composer",
            "url": "https://packages.drupal.org/8"
        }
    },
    "autoload": {
        "psr-4": {
            "Drupal\\oe_translation\\": "./src/",
            "Symfony\\Component\\PropertyInfo\\": "./vendor/symfony/property-info/",
            "Symfony\\Component\\PropertyAccess\\": "./vendor/symfony/property-access/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Drupal\\Tests\\oe_translation\\": "./tests/src",
            "Drupal\\Tests\\oe_translation_epoetry\\": "./modules/oe_translation_epoetry/tests/src",
            "Drupal\\Tests\\oe_translation_corporate_workflow\\": "./modules/oe_translation_corporate_workflow/tests/src"
        }
    },
    "extra": {
        "composer-exit-on-patch-failure": true,
        "enable-patching": true,
        "installer-paths": {
            "build/core": ["type:drupal-core"],
            "build/profiles/contrib/{$name}": ["type:drupal-profile"],
            "build/modules/contrib/{$name}": ["type:drupal-module"],
            "build/themes/contrib/{$name}": ["type:drupal-theme"]
        },
        "drupal-scaffold": {
            "locations": {
                "web-root": "./build"
            }
        },
        "patches": {
            "drupal/address": {
                "https://www.drupal.org/project/address/issues/3187662": "https://www.drupal.org/files/issues/2020-12-10/3187662-3.patch"
            }
        }
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "composer/installers": true,
            "cweagans/composer-patches": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "drupal/core-composer-scaffold": true,
            "phpro/grumphp": true,
            "php-http/discovery": false
        },
        "discard-changes": true
    }
}
