<?php

/**
 * @file
 * OE Translation ePoetry module file.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\oe_translation_epoetry\TranslationRequestEpoetry;

/**
 * Implements hook_entity_bundle_info_alter().
 */
function oe_translation_epoetry_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['oe_translation_request']['epoetry'])) {
    $bundles['oe_translation_request']['epoetry']['class'] = TranslationRequestEpoetry::class;
  }
}

/**
 * Implements hook_theme().
 */
function oe_translation_epoetry_theme() {
  return [
    'content_html_template' => [
      'variables' => [
        'request_id' => NULL,
        'source_language' => NULL,
        'items' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_entity_ENTITY_TYPE_view_alter().
 */
function oe_translation_epoetry_oe_translation_request_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() !== 'epoetry') {
    return;
  }

  /** @var \Drupal\oe_translation_epoetry\TranslationRequestEpoetryInterface $entity */
  if (!isset($build['meta'])) {
    return;
  }

  $header = &$build['meta']['#header'];
  $header['request_id'] = t('Request ID');
  $header['auto_accept'] = t('Auto-accept translations');
  $header['auto_sync'] = t('Auto-sync translations');
  $header['requested_deadline'] = t('Requested deadline');
  $header['accepted_deadline'] = t('Accepted deadline');
  $row = &$build['meta']['#rows'][0];

  $row['request_id'] = $entity->getRequestId(TRUE);
  $row['auto_accept'] = $entity->isAutoAccept() ? t('Yes') : t('No');
  $plugin_auto_accept = $entity->getTranslatorProvider()->getProviderConfiguration()['auto_accept'];
  if ($plugin_auto_accept) {
    $row['auto_accept'] = t('Yes');
  }
  $row['auto_sync'] = $entity->isAutoSync() ? t('Yes') : t('No');
  $row['requested_deadline'] = $entity->getDeadline()->format('Y-M-d');
  $row['accepted_deadline'] = $entity->getAcceptedDeadline() ? $entity->getAcceptedDeadline()->format('Y-M-d') : 'N/A';
  $build['comment'] = [
    '#type' => 'fieldset',
    '#title' => t('Message to provider'),
  ];
  $build['comment'][] = [
    '#markup' => $entity->getMessage() ?? t('No message sent.'),
  ];
}
